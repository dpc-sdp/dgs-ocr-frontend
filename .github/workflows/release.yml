name: release

on:
  workflow_dispatch:
    inputs:
      env:
        required: true
        default: 'uat'
        type: choice
        options:
        - uat
        - production
      version:
        required: false
        default: ''

env:
  UAT_APP_RESOURCE_GROUP_NAME: "uat-ocr"
  UAT_APP_RESOURCE_NAME: "uatocrfront"
  PROD_APP_RESOURCE_GROUP_NAME: "production-ocr"
  PROD_APP_RESOURCE_NAME: "prodocrfront"
  IMAGE_REGISTRY_HOSTNAME: "devocrregistry.azurecr.io"
  IMAGE_NAME: "frontend"

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/azure-cli
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: uat
        if: ${{ inputs.env == 'uat'}}
        run: |
          dir=$(pwd)
          git config --global --add safe.directory $dir
          echo "${{inputs.version}}"
          if [[ ${{inputs.version}} == '' ]]; then BUILD=$(git rev-parse --abbrev-ref HEAD) && BUILD=${BUILD//\//-}; else BUILD=${{inputs.version}}; fi
          echo $BUILD
          az extension add -n containerapp
          az login --service-principal --username ${{secrets.UAT_ARM_CLIENT_ID}} --password ${{secrets.UAT_ARM_CLIENT_SECRET}} --tenant ${{secrets.UAT_ARM_TENANT_ID}}
          az account set --subscription ${{secrets.UAT_ARM_SUBSCRIPTION_ID}}
          az containerapp update -n $UAT_APP_RESOURCE_NAME -g $UAT_APP_RESOURCE_GROUP_NAME -i $IMAGE_REGISTRY_HOSTNAME/$IMAGE_NAME:$BUILD --set-env-vars version="$BUILD:run-$GITHUB_RUN_NUMBER"
      - name: production
        if: ${{ inputs.env == 'production'}}
        run: |
          dir=$(pwd)
          git config --global --add safe.directory $dir
          BUILD=$(git rev-parse --abbrev-ref HEAD) && BUILD=${BUILD//\//-}
          az extension add -n containerapp
          az login --service-principal --username ${{secrets.PROD_ARM_CLIENT_ID}} --password ${{secrets.PROD_ARM_CLIENT_SECRET}} --tenant ${{secrets.PROD_ARM_TENANT_ID}}
          az account set --subscription ${{secrets.PROD_ARM_SUBSCRIPTION_ID}}
          az containerapp update -n $PROD_APP_RESOURCE_NAME -g $PROD_APP_RESOURCE_GROUP_NAME -i $IMAGE_REGISTRY_HOSTNAME/$IMAGE_NAME:$BUILD --set-env-vars version="$BUILD:run-$GITHUB_RUN_NUMBER"